char *s = N_("Default window size");
char *s = N_("Default window state");
char *s = N_("Show toolbar");
char *s = N_("If true, the window toolbar is visible.");
char *s = N_("Show statusbar");
char *s = N_("If true, the window statusbar is visible.");
char *s = N_("Automatically detected text encodings");
char *s = N_("These text encodings will be automatically used (in order) to try to decode loaded text files.");
char *s = N_("Width of an indentation step");
char *s = N_("The number of spaces to use for a single indent step");
char *s = N_("Whether to indent using spaces or tabs");
char *s = N_("If true, any new indentation will use spaces instead of tabs.");
char *s = N_("Show line numbers");
char *s = N_("If true, line numbers will be shown in the gutter of file comparisons.");
char *s = N_("Highlight syntax");
char *s = N_("Whether to highlight syntax in comparisons. Because of Meld's own color highlighting, this is off by default.");
char *s = N_("Color scheme to use for syntax highlighting");
char *s = N_("Used by GtkSourceView to determine colors for syntax highlighting");
char *s = N_("Displayed whitespace");
char *s = N_("Selector for individual whitespace character types to be shown. Possible values are 'space', 'tab', 'newline' and 'nbsp'.");
char *s = N_("Wrap mode");
char *s = N_("Lines in file comparisons will be wrapped according to this setting, either not at all ('none'), at any character ('char') or only at the end of words ('word').");
char *s = N_("Highlight current line");
char *s = N_("If true, the line containing the cursor will be highlighted in file comparisons.");
char *s = N_("Use the system default monospace font");
char *s = N_("If false, custom-font will be used instead of the system monospace font.");
char *s = N_("Custom font");
char *s = N_("The custom font to use, stored as a string and parsed as a Pango font description.");
char *s = N_("Ignore blank lines when comparing files");
char *s = N_("If true, blank lines will be trimmed when highlighting changes between files.");
char *s = N_("Use the system default editor");
char *s = N_("If false, custom-editor-command will be used instead of the system editor when opening files externally.");
char *s = N_("The custom editor launch command");
char *s = N_("The command used to launch a custom editor. Some limited templating is supported here; at the moment '{file}' and '{line}' are recognised tokens.");
char *s = N_("Columns to display");
char *s = N_("List of column names in folder comparison and whether they should be displayed.");
char *s = N_("Ignore symbolic links");
char *s = N_("If true, folder comparisons do not follow symbolic links when traversing the folder tree.");
char *s = N_("Use shallow comparison");
char *s = N_("If true, folder comparisons compare files based solely on size and mtime, considering files to be identical if their size and mtime match, and different otherwise.");
char *s = N_("File timestamp resolution");
char *s = N_("When comparing based on mtime, this is the minimum difference in nanoseconds between two files before they're considered to have different mtimes. This is useful when comparing files between filesystems with different timestamp resolution.");
char *s = N_("Apply text filters during folder comparisons");
char *s = N_("If true, folder comparisons that compare file contents also apply active text filters and the blank line trimming option, and ignore newline differences.");
char *s = N_("File status filters");
char *s = N_("List of statuses used to filter visible files in folder comparison.");
char *s = N_("Show the version control console output");
char *s = N_("If true, a console output section will be shown in version control views, showing the commands run for version control operations.");
char *s = N_("Version control pane position");
char *s = N_("This is the height of the main version control tree when the console pane is shown.");
char *s = N_("Present version comparisons as left-local/right-remote");
char *s = N_("If true, version control comparisons will use a left-is-local, right-is-remote scheme to determine what order to present files in panes. Otherwise, a left-is-theirs, right-is-mine scheme is used.");
char *s = N_("Order for files in three-way version control merge comparisons");
char *s = N_("Choices for file order are remote/merged/local and local/merged/remote. This preference only affects three-way comparisons launched from the version control view, so is used solely for merges/conflict resolution within Meld.");
char *s = N_("Show margin in commit message editor");
char *s = N_("If true, a guide will be displayed to show what column the margin is at in the version control commit message editor.");
char *s = N_("Margin column in commit message editor");
char *s = N_("The column at which to show the margin in the version control commit message editor.");
char *s = N_("Automatically hard-wrap commit messages");
char *s = N_("If true, the version control commit message editor will hard-wrap (i.e., insert line breaks) at the commit margin before commit.");
char *s = N_("Version control status filters");
char *s = N_("List of statuses used to filter visible files in version control comparison.");
char *s = N_("Filename-based filters");
char *s = N_("List of predefined filename-based filters that, if active, will remove matching files from a folder comparison.");
char *s = N_("Text-based filters");
char *s = N_("List of predefined text-based regex filters that, if active, will remove text from being used in a file comparison. The text will still be displayed, but won't contribute to the comparison itself.");
